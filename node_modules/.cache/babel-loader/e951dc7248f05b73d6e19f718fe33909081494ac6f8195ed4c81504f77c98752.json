{"ast":null,"code":"var _jsxFileName = \"/Users/sayurigarud/Desktop/my-fashion-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Using the useState hook for storing weather data and errors\n  // const [weatherData, setWeatherData] = useState(null);\n  const [error, setError] = useState(null);\n  const [weather, setWeather] = useState(null);\n  const [location, setLocation] = useState({\n    lat: null,\n    lon: null\n  });\n  const [currentDay, setCurrentDay] = useState(\"\");\n\n  // Get the current day\n  useEffect(() => {\n    const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n    const today = new Date();\n    setCurrentDay(days[today.getDay()]);\n  }, []);\n\n  // Get user's location and fetch weather\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        setLocation({\n          lat: position.coords.latitude,\n          lon: position.coords.longitude\n        });\n      }, err => {\n        setError(\"Location access denied.\");\n      });\n    } else {\n      setError(\"Geolocation is not supported by this browser.\");\n    }\n  }, []);\n  useEffect(() => {\n    if (location.lat && location.lon) {\n      console.log(\"here\");\n      const fetchWeather = async () => {\n        try {\n          const response = await fetch('https://api.tomorrow.io/v4/weather/forecast?location=42.3478,-71.0466&apikey=pBoXWdYZRvGRihkxNndL0fvsPKGRlNCV');\n          const data = await response.json();\n          setWeather(data.data.timelines[0].intervals[0].values);\n        } catch (err) {\n          setError(\"Failed to fetch weather data.\");\n        }\n      };\n      fetchWeather();\n    }\n  }, [location]);\n\n  //   useEffect(() => {\n  //     // Setting the fetch options\n  //     const options = { method: 'GET', headers: \n  // { accept: 'application/json' } };\n\n  //     // Fetching weather data\n  //     fetch('https://api.openweathermap.org/data/2.5/weather?lat=${location.lat}&lon=${location.lon}&units=metric&appid=YOUR_API_KEY', options)\n  //       .then(response => response.json())\n  //       .then(data => {\n  //         // Set the weather data to state\n  //         setWeatherData(data);\n  //       })\n  //       .catch(err => {\n  //         // Set the error to state if there is an error\n  //         setError(err);\n  //         console.error(err);\n  //       });\n  //   }, []);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [weather && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Weather Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Today is \", currentDay]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), weather ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Your Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Temperature: \", weather.temperature, \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Weather Code: \", weather.weatherCode]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading weather...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Error fetching data: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"1xcqFv2LLJtkSVC42IB85Ekj+dk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","error","setError","weather","setWeather","location","setLocation","lat","lon","currentDay","setCurrentDay","days","today","Date","getDay","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","err","console","log","fetchWeather","response","fetch","data","json","timelines","intervals","values","children","fileName","_jsxFileName","lineNumber","columnNumber","temperature","weatherCode","message","_c","$RefreshReg$"],"sources":["/Users/sayurigarud/Desktop/my-fashion-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction App() {\n  // Using the useState hook for storing weather data and errors\n  // const [weatherData, setWeatherData] = useState(null);\n  const [error, setError] = useState(null);\n  const [weather, setWeather] = useState(null);\n  const [location, setLocation] = useState({ lat: null, lon: null });\n  const [currentDay, setCurrentDay] = useState(\"\");\n  \n    // Get the current day\n    useEffect(() => {\n      const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n      const today = new Date();\n      setCurrentDay(days[today.getDay()]);\n    }, []);\n\n      // Get user's location and fetch weather\n    useEffect(() => {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition((position) => {\n          setLocation({\n            lat: position.coords.latitude,\n            lon: position.coords.longitude\n          });\n        }, (err) => {\n          setError(\"Location access denied.\");\n        });\n      } else {\n        setError(\"Geolocation is not supported by this browser.\");\n      }\n    }, []);\n\n    useEffect(() => {\n      if (location.lat && location.lon) {\n        console.log(\"here\")\n        const fetchWeather = async () => {\n          try {\n            const response = await fetch('https://api.tomorrow.io/v4/weather/forecast?location=42.3478,-71.0466&apikey=pBoXWdYZRvGRihkxNndL0fvsPKGRlNCV');\n            const data = await response.json();\n            setWeather(data.data.timelines[0].intervals[0].values);\n          } catch (err) {\n            setError(\"Failed to fetch weather data.\");\n          }\n        };\n        fetchWeather();\n      }\n    }, [location]);\n  \n\n//   useEffect(() => {\n//     // Setting the fetch options\n//     const options = { method: 'GET', headers: \n// { accept: 'application/json' } };\n\n//     // Fetching weather data\n//     fetch('https://api.openweathermap.org/data/2.5/weather?lat=${location.lat}&lon=${location.lon}&units=metric&appid=YOUR_API_KEY', options)\n//       .then(response => response.json())\n//       .then(data => {\n//         // Set the weather data to state\n//         setWeatherData(data);\n//       })\n//       .catch(err => {\n//         // Set the error to state if there is an error\n//         setError(err);\n//         console.error(err);\n//       });\n//   }, []);\n\n  return (\n    <div>\n      <main>\n        {weather && (\n          <div>\n            <h2>Weather Data</h2>\n            <p>Today is {currentDay}</p>\n            {weather ? (\n              <div>\n                <h2>Your Location</h2>\n                <p>Temperature: {weather.temperature}Â°C</p>\n                <p>Weather Code: {weather.weatherCode}</p>\n              </div>\n            ) : (\n              <p>Loading weather...</p>\n            )}\n          </div>\n        )}\n        {error && <p>Error fetching data: {error.message}</p>}\n      </main>\n    </ div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}